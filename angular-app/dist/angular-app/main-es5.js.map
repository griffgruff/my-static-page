{"version":3,"sources":["webpack:///$_lazy_route_resources|lazy|groupOptions: {}|namespace object","webpack:///src/app/about.component.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/build-specific/index.ts","webpack:///src/app/core/components/header-bar-brand.component.ts","webpack:///src/app/core/components/header-bar.component.ts","webpack:///src/app/core/components/index.ts","webpack:///src/app/core/components/nav.component.ts","webpack:///src/app/core/components/not-found.component.ts","webpack:///src/app/core/model/product.ts","webpack:///src/app/in-memory-data.service.ts","webpack:///src/app/router.ts","webpack:///src/app/store/config.ts","webpack:///src/app/store/entity-metadata.ts","webpack:///src/app/store/store.module.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","id","module","exports","AboutComponent","Customer","AppComponent","customers","name","AppModule","provide","InMemoryDataService","useExisting","InMemoryDbService","BrowserModule","HttpClientModule","RouterModule","routes","AppStoreModule","externalModules","HttpClientInMemoryWebApiModule","dataEncapsulation","delay","passThruUnknownUrl","StoreDevtoolsModule","maxAge","HeaderBarBrandComponent","HeaderBarComponent","declarations","NavComponent","NotFoundComponent","Product","active","db","reqInfo","getDbData","body","utils","getJsonBody","clear","coll","length","url","parsed","parseRequestUrl","collectionName","mapCollectionName","undefined","hero","villain","products","description","quantity","path","pathMatch","redirectTo","loadChildren","m","ProductsModule","component","root","environment","defaultDataServiceConfig","entityHttpResourceUrls","entityResourceUrl","collectionResourceUrl","entityMetadata","entityConfig","DefaultDataServiceConfig","useValue","StoreModule","EffectsModule","EntityDataModule","production","API","enableProdMode","platformBrowser","bootstrapModule","err","console","error"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = 8255;\nmodule.exports = webpackEmptyAsyncContext;","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-about',\n  template: `\n    <div class=\"content-container\">\n      <div class=\"content-title-group not-found\">\n        <h2 class=\"title\">Product Wish List</h2>\n        <p>\n          This project was created to help represent a fundamental app written\n          with Angular. The shopping theme is used throughout the app.\n        </p>\n        <br />\n        <h2 class=\"title\">Resources</h2>\n        <ul>\n          <li>\n            <a href=\"https://github.com/MicrosoftDocs/mslearn-staticwebapp\">\n              Code in GitHub\n            </a>\n          </li>\n        </ul>\n      </div>\n    </div>\n  `,\n})\nexport class AboutComponent {}\n","import { Component } from '@angular/core';\nexport class Customer {\n  public id: number;\n  public name: string;\n}\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  customers: Customer[] = [{ id: 1, name: 'john' }];\n}\n","<div>\n  <app-header-bar></app-header-bar>\n  <div class=\"section columns\">\n    <app-nav class=\"column is-2\"></app-nav>\n    <main class=\"column\">\n      <router-outlet></router-outlet>\n    </main>\n  </div>\n</div>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { HttpClientModule } from '@angular/common/http';\n\nimport { routes } from './router';\nimport { AppComponent } from './app.component';\nimport { AppStoreModule } from './store/store.module';\nimport { AboutComponent } from './about.component';\nimport { RouterModule } from '@angular/router';\nimport { externalModules } from './build-specific';\nimport { declarations } from './core';\nimport {\n  HttpClientInMemoryWebApiModule,\n  InMemoryDbService,\n} from 'angular-in-memory-web-api';\nimport { InMemoryDataService } from './in-memory-data.service';\n\n@NgModule({\n  declarations: [AppComponent, AboutComponent, declarations],\n  imports: [\n    BrowserModule,\n    HttpClientModule,\n    RouterModule.forRoot(routes),\n    AppStoreModule,\n    externalModules,\n    HttpClientInMemoryWebApiModule.forRoot(InMemoryDataService, {\n      dataEncapsulation: false,\n      delay: 300,\n      passThruUnknownUrl: true,\n    }),\n  ],\n  providers: [{ provide: InMemoryDataService, useExisting: InMemoryDbService }],\n  bootstrap: [AppComponent],\n})\nexport class AppModule {}\n","import { StoreDevtoolsModule } from '@ngrx/store-devtools';\n\n/**\n * Put dev specific code here, and prod specific code in index.prod.ts\n * https://ngrx.io/guide/store-devtools/recipes/exclude\n */\nexport const externalModules = [\n  StoreDevtoolsModule.instrument({\n    maxAge: 25\n  })\n];\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-header-bar-brand',\n  template: `\n    <div class=\"navbar-brand\">\n      <a\n        class=\"navbar-item\"\n        href=\"https://angular.io/\"\n        target=\"_blank\"\n        rel=\"noopener noreferrer\"\n      >\n        <i class=\"fab js-logo fa-angular fa-2x\" aria-hidden=\"true\"></i>\n      </a>\n      <a class=\"navbar-item nav-home\" router-link=\"/\">\n        <span class=\"brand-first\">MY</span>\n        <span class=\"brand-second\">SHOPPING</span>\n        <span class=\"brand-third\">LIST</span>\n      </a>\n    </div>\n  `,\n})\nexport class HeaderBarBrandComponent {}\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-header-bar',\n  template: `\n    <header>\n      <nav\n        class=\"navbar has-background-dark is-dark\"\n        role=\"navigation\"\n        aria-label=\"main navigation\"\n      >\n        <app-header-bar-brand></app-header-bar-brand>\n      </nav>\n    </header>\n  `,\n})\nexport class HeaderBarComponent {}\n","export * from './header-bar.component';\nexport * from './header-bar-brand.component';\nexport * from './nav.component';\nexport * from './not-found.component';\n\nimport { HeaderBarBrandComponent } from './header-bar-brand.component';\nimport { HeaderBarComponent } from './header-bar.component';\nimport { NavComponent } from './nav.component';\nimport { NotFoundComponent } from './not-found.component';\n\nexport const declarations = [\n  NavComponent,\n  HeaderBarComponent,\n  HeaderBarBrandComponent,\n  NotFoundComponent,\n];\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-nav',\n  template: `\n    <nav class=\"menu\">\n      <p class=\"menu-label\">Menu</p>\n      <ul class=\"menu-list\">\n        <a routerLink=\"/products\" routerLinkActive=\"router-link-active\">\n          <span>Products</span>\n        </a>\n        <a routerLink=\"/about\" routerLinkActive=\"router-link-active\">\n          <span>About</span>\n        </a>\n      </ul>\n    </nav>\n  `,\n})\nexport class NavComponent {}\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-not-found',\n  template: `\n    <div class=\"content-container\">\n      <div class=\"content-title-group not-found\">\n        <i class=\"fas fa-exclamation-triangle\" aria-hidden=\"true\"></i> &nbsp;\n        <span class=\"title\">These aren't the bits you're looking for</span>\n      </div>\n    </div>\n  `,\n})\nexport class NotFoundComponent {}\n","export class Product {\n  id: number;\n  name: string;\n  description: string;\n  quantity: number;\n}\n","/**\n * Hero-oriented InMemoryDbService with method overrides.\n */\nimport { Injectable } from '@angular/core';\nimport {\n  ParsedRequestUrl,\n  RequestInfo,\n  RequestInfoUtilities,\n} from 'angular-in-memory-web-api';\n\n/** In-memory database data */\ninterface Db {\n  [collectionName: string]: any[];\n}\n\n@Injectable()\nexport class InMemoryDataService {\n  /** True if in-mem service is intercepting; all requests pass thru when false. */\n  active = true;\n\n  /** In-memory database data */\n  db: Db = {};\n\n  /** Create the in-memory database on start or by command */\n  createDb(reqInfo?: RequestInfo) {\n    this.db = getDbData();\n\n    if (reqInfo) {\n      const body = reqInfo.utils.getJsonBody(reqInfo.req) || {};\n      if (body.clear === true) {\n        // tslint:disable-next-line:forin\n        for (const coll in this.db) {\n          this.db[coll].length = 0;\n        }\n      }\n\n      this.active = !!body.active;\n    }\n    return this.db;\n  }\n\n  /**\n   * Override `parseRequestUrl`\n   * Manipulates the request URL or the parsed result.\n   * If in-mem is inactive, clear collectionName so that service passes request thru.\n   * If in-mem is active, after parsing with the default parser,\n   * @param url from request URL\n   * @param utils for manipulating parsed URL\n   */\n  parseRequestUrl(url: string, utils: RequestInfoUtilities): ParsedRequestUrl {\n    const parsed = utils.parseRequestUrl(url);\n    parsed.collectionName = this.active\n      ? mapCollectionName(parsed.collectionName)\n      : undefined;\n    return parsed;\n  }\n}\n\n/**\n * Remap a known singular collection name (\"hero\")\n * to the plural collection name (\"heroes\"); else return the name\n * @param name - collection name from the parsed URL\n */\nfunction mapCollectionName(name: string): string {\n  return (\n    ({\n      hero: 'heroes',\n      villain: 'villains',\n    } as any)[name] || name\n  );\n}\n\n/**\n * Development data\n */\nfunction getDbData() {\n  const products: any[] = [\n    {\n      id: 10,\n      name: 'Strawberries',\n      description: '16oz package of fresh organic strawberries',\n      quantity: '1',\n    },\n    {\n      id: 20,\n      name: 'Sliced bread',\n      description: 'Loaf of fresh sliced wheat bread',\n      quantity: 1,\n    },\n    {\n      id: 30,\n      name: 'Apples',\n      description: 'Bag of 7 fresh McIntosh apples',\n      quantity: 1,\n    },\n  ];\n  return { products } as Db;\n}\n","import { Routes } from '@angular/router';\nimport { AboutComponent } from './about.component';\nimport { NotFoundComponent } from './core';\n\nexport const routes: Routes = [\n  { path: '', pathMatch: 'full', redirectTo: 'products' },\n  {\n    path: 'products',\n    loadChildren: () =>\n      import('./products/products.module').then((m) => m.ProductsModule),\n  },\n  { path: 'about', component: AboutComponent },\n  { path: '**', component: NotFoundComponent },\n];\n","import { DefaultDataServiceConfig } from '@ngrx/data';\nimport { environment } from './../../environments/environment';\n\nconst root = environment.API || 'api';\n\nexport const defaultDataServiceConfig: DefaultDataServiceConfig = {\n  root, // default root path to the server's web api\n\n  entityHttpResourceUrls: {\n    Product: {\n      // You must specify the root as part of the resource URL.\n      entityResourceUrl: `${root}/products/`,\n      collectionResourceUrl: `${root}/products/`,\n    },\n  },\n};\n","import { EntityMetadataMap } from '@ngrx/data';\n\nconst entityMetadata: EntityMetadataMap = {\n  Product: {},\n};\n\nexport const entityConfig = {\n  entityMetadata,\n};\n","import { NgModule } from '@angular/core';\nimport { EffectsModule } from '@ngrx/effects';\nimport { StoreModule } from '@ngrx/store';\nimport { DefaultDataServiceConfig, EntityDataModule } from '@ngrx/data';\nimport { defaultDataServiceConfig } from './config';\nimport { entityConfig } from './entity-metadata';\n\n@NgModule({\n  imports: [\n    StoreModule.forRoot({}),\n    EffectsModule.forRoot([]),\n    EntityDataModule.forRoot(entityConfig)\n  ],\n  providers: [\n    { provide: DefaultDataServiceConfig, useValue: defaultDataServiceConfig }\n  ]\n})\nexport class AppStoreModule {}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  API: 'api'\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/plugins/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}